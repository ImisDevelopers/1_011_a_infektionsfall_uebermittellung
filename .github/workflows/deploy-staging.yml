name: Staging

on:
  push:
    branches:
    - dev

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  CLOUD_SQL_SERVICE_ACCOUNT: ${{ secrets.CLOUD_SQL_SERVICE_ACCOUNT }}
  CLOUD_STORE_SERVICE_ACCOUNT: ${{ secrets.CLOUD_STORE_SERVICE_ACCOUNT }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  SENTRY_BACKEND_DSN: ${{ secrets.SENTRY_BACKEND_DSN }}
  SENTRY_FRONTEND_DSN: ${{ secrets.SENTRY_FRONTEND_DSN }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: europe-west1
  GKE_CLUSTER: cluster-staging
  CLIENT_IMAGE: imis-client
  SERVER_IMAGE: imis-server
  REGISTRY_HOSTNAME: eu.gcr.io

jobs:
  setup-build-publish-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '286.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}
        project_id: ${{ secrets.GKE_PROJECT_ID }}
    - uses: actions/setup-java@v1.3.0
      with:
        java-version: 1.11

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Build and push image to Google Container Registry
    - name: Build
      run: |-
        gradle jib --image "$REGISTRY_HOSTNAME/$GKE_PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"

    # Deploy the Docker image to the GKE cluster
    - name: Prepare Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.1.2

    - name: Deploy
      run: |
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" --project "$GKE_PROJECT_ID"
        echo -n "${CLOUD_SQL_SERVICE_ACCOUNT}" > chart/cloudsql.base64.json
        echo -n "${CLOUD_STORE_SERVICE_ACCOUNT}" > chart/cloudstore.base64.json
        helm repo add stable https://kubernetes-charts.storage.googleapis.com
        helm dependency build chart
        helm upgrade --install imis chart -f chart/values.staging.yml \
          --set gitSha=${GITHUB_SHA} --set "secrets.postgres=$(echo -n ${POSTGRES_PASSWORD} | base64)" \
          --set "secrets.sentry.backend=${SENTRY_BACKEND_DSN}" \
          --set "secrets.sentry.frontend=${SENTRY_FRONTEND_DSN}"
        kubectl rollout status deployment/imis-client
        kubectl rollout status deployment/imis-server
        kubectl get services -o wide
