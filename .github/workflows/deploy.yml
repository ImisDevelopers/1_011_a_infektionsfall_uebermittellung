name: Production

on:
  release:
    types: [published]

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  CLOUD_SQL_SERVICE_ACCOUNT: ${{ secrets.CLOUD_SQL_SERVICE_ACCOUNT }}
  CLOUD_STORE_SERVICE_ACCOUNT: ${{ secrets.CLOUD_STORE_SERVICE_ACCOUNT }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  SENTRY_BACKEND_DSN: ${{ secrets.SENTRY_BACKEND_DSN }}
  SENTRY_FRONTEND_DSN: ${{ secrets.SENTRY_FRONTEND_DSN }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: europe-west3-b
  GKE_CLUSTER: cluster-1
  CLIENT_IMAGE: imis-client
  SERVER_IMAGE: imis-server
  REGISTRY_HOSTNAME: eu.gcr.io

jobs:
  setup-build-publish-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}
    - uses: actions/setup-java@v1.3.0
      with:
        java-version: 1.11

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    - name: Build
      run: |-
        gradle jib --image "$REGISTRY_HOSTNAME/$GKE_PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"

      # Deploy image to Cloud Run
    - name: Deploy
      run: |-
        gcloud run deploy "$SERVICE_NAME" \
          --region "$RUN_REGION" \
          --image "$REGISTRY_HOSTNAME/$GKE_PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
          --platform "managed" \
          --allow-unauthenticated
