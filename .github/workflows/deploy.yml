name: Build and Deploy to GKE

on:
  release:
    types:
      - published
      - unpublished
      - created
      - edited
      - prereleased

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  CLOUD_SQL_SERVICE_ACCOUNT: ${{ secrets.CLOUD_SQL_SERVICE_ACCOUNT }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: europe-west3-b
  GKE_CLUSTER: cluster-1
  CLIENT_IMAGE: imis-client
  SERVER_IMAGE: imis-server
  REGISTRY_HOSTNAME: eu.gcr.io

jobs:
  setup-build-publish-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Build the Docker image
    - name: Build client
      run: |
        (cd client && docker build -f Dockerfile.prod -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT_ID"/"$CLIENT_IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .)
    - name: Build server
      run: |
        docker build -f Dockerfile.prod -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT_ID"/"$SERVER_IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push "$REGISTRY_HOSTNAME/$GKE_PROJECT_ID/$CLIENT_IMAGE:$GITHUB_SHA"
        docker push "$REGISTRY_HOSTNAME/$GKE_PROJECT_ID/$SERVER_IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |
        curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" --project "$GKE_PROJECT_ID"
        echo -n "${CLOUD_SQL_SERVICE_ACCOUNT}" | base64 -d > credentials.json
        kubectl get secret cloudsql || kubectl create secret generic cloudsql --from-file=credentials.json=credentials.json
        ./kustomize edit set image "client-image=$REGISTRY_HOSTNAME/$GKE_PROJECT_ID/$CLIENT_IMAGE:${GITHUB_SHA}"
        ./kustomize edit set image "server-image=$REGISTRY_HOSTNAME/$GKE_PROJECT_ID/$SERVER_IMAGE:${GITHUB_SHA}"
        ./kustomize edit add secret postgres --from-literal=password=${POSTGRES_PASSWORD}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/imis-client
        kubectl rollout status deployment/imis-server
        kubectl get services -o wide
