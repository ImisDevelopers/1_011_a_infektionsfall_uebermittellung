plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'de.coronavirus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
ext {
    set('springCloudVersion', "Hoxton.SR3")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.sentry:sentry-spring:1.7.30'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-storage'
    implementation 'org.postgresql:postgresql:42.2.11'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'com.googlecode.perfect-hashes:perfect-hashes:1.0'
    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'


    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootJar {
    archiveName = "imis.jar"
    mainClassName = 'de.coronavirus.imis.App'

    from('../client/build') {
        into 'static'
    }
}

bootJar.dependsOn(':client:assemble')

/*test {
    useJUnitPlatform()
}*/
